#!/bin/bash

# Copyright 2016 The Lightweight Docker Runtime contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Number zero is master, rest are normal swarm-nodes
[ $# -lt 1 ] || [ $1 == "-h" ] && { echo "Usage: $0 [-h] <id, 0 for master> [label]"; exit 1; }

TLDR_ROOT=$(dirname ${BASH_SOURCE[0]})/..
TLDR_BIN=$TLDR_ROOT/bin
source $TLDR_BIN/utils.sh

# load the right provider code
detect_provider
info "Using provider: ${TLDR_PROVIDER}"
source $TLDR_BIN/providers/$TLDR_PROVIDER/provider.sh

if [ $1 -eq 0 ]; then
  create_swarm_master
else
  create_swarm_node $1 $2
fi

# $NAME is generated by the create_swarm_xxx functions
info "Provisiniong infrastructure components in node $NAME"
info "Starting registrator on $NAME"
docker $(docker-machine config $NAME) run -d \
       -v "//var/run/docker.sock:/tmp/docker.sock"  \
       -h registrator \
       --name $NAME-registrator \
       --net tldr-overlay \
       $REGISTRY/registrator \
       -internal consul://$NAME-consul:8500

print "Starting cAdvisor on $NAME"
docker $(docker-machine config $NAME) run \
    --name cadvisor \
    --volume=/:/rootfs:ro \
    --volume=/var/run:/var/run:rw \
    --volume=/sys:/sys:ro \
    --volume=/var/lib/docker/:/var/lib/docker:ro \
    --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro \
    --publish=8080:8080 \
    --detach=true \
    --name=$NAME-cadvisor \
    --restart=always \
    $REGISTRY/cadvisor

info "Started a new node with IP \e[31m$(docker-machine ip $NAME)"

# make sure components are there
# test that all the pieces are working
eval $(docker-machine env $NAME)
if [ "$(container_status $NAME-consul)" != "running" ]; then
  error "Consul was not successfully started."
  exit 1
fi

if [ "$(container_status $NAME-registrator)" != "running" ]; then
  error "Registrator was not successfully started."
  exit 1
fi